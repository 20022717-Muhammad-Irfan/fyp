pipeline {
    agent any
    stages {
       stage('Clone git') { 
            steps { sh 'rm -r fyp'
                    sh 'mkdir fyp'
                    sh 'cd fyp'
                    dir ('fyp') {
                    git url : 'https://github.com/20022717-Muhammad-Irfan/fyp.git', branch: 'main'
                    }
                }
                }
                
         stage('Approval') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "akhalis"
                parameters {
                    string(name: 'PERSON', defaultValue: 'FYP team', description: 'Who should I say hello to?')
                }
            }
            steps {
                echo "Hello, ${PERSON}, nice to meet you."
            }
        }
        stage('Build and Deploy') {
            steps {
               sh 'echo "docker(0" | sudo -S docker stop FYP'
               sh 'echo "docker(0" | sudo -S docker rm FYP'
               sh 'echo "docker(0" | sudo -S docker image rm web'
               sh 'cd fyp'
               sh 'echo "docker(0" | sudo -S docker build -t web .'
               sh 'echo "docker(0" | sudo -S docker run -d -it -h fyp -p 80:80 --ip 172.17.0.2 --name FYP web'
               sh 'echo "docker(0" | sudo -S docker start FYP'
            }
        }
        stage('Test') {
            
            parallel {
            
                stage('Docker Container Test') {
                  
                   steps {
                       echo 'build container'
                    }
                }
                stage('End-to-End Test') {
                    
                    steps {
                        echo 'User testing the web application'
                    }
                }
                stage('Web App Test') {
                    
                    steps {
                       echo 'Testing the features are working'
                    }
                }
            }
        }
        
    }
}
